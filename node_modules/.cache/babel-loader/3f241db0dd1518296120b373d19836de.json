{"ast":null,"code":"var _jsxFileName = \"/Users/minh/Sites/localhost/react/figma-react-dashboard/src/App.js\";\nimport React, { useContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Dashboard from './containers/Dashboard';\nimport { lightTheme, darkTheme } from './styles/theme';\nimport { GlobalStyles } from './styles/global';\nimport { ThemeContext } from './context/themeContext';\n\nconst App = () => {\n  const context = useContext(ThemeContext);\n  const {\n    theme\n  } = context;\n  return React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/minh/Sites/localhost/react/figma-react-dashboard/src/App.js"],"names":["React","useContext","ThemeProvider","Dashboard","lightTheme","darkTheme","GlobalStyles","ThemeContext","App","context","theme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,OAAO,GAAGR,UAAU,CAACM,YAAD,CAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAYD,OAAlB;AAGA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEC,KAAK,KAAK,OAAV,GAAoBN,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAdD;;AAgBA,eAAeG,GAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport Dashboard from './containers/Dashboard'\nimport { lightTheme, darkTheme } from './styles/theme'\nimport { GlobalStyles } from './styles/global'\nimport { ThemeContext } from './context/themeContext'\n\nconst App = () => {\n\n  const context = useContext(ThemeContext);\n  const { theme } = context;\n\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <Dashboard />\n      </>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
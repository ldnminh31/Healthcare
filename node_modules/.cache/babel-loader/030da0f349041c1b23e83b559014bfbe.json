{"ast":null,"code":"var _jsxFileName = \"/Users/minh/Sites/localhost/react/figma-react-dashboard/src/components/Sidebar/ToggleSwitch.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useThemeContext } from '../../context/themeContext';\nconst Switch = styled.div`\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    position: absolute;\n    bottom: 1rem;\n    right: 1rem;\n    width: ${({\n  theme\n}) => theme.switchWidth};\n    height: ${({\n  theme\n}) => theme.switchHeight};\n    border-radius: 50em;\n    padding: ${({\n  theme\n}) => theme.switchPadding} 0;\n\n    .switch__input, .switch__label {\n        position: absolute;\n        left: 0;\n        top: 0;\n    }\n    .switch__input {\n        margin: 0;\n        padding: 0;\n        opacity: 0;\n        height: 0;\n        width: 0;\n        pointer-events: none;\n\n        &:checked + .switch__label {\n            background-color: ${({\n  theme\n}) => theme.colorWhite};\n        }\n\n        &:checked + .switch__label + .switch__marker {\n            left: calc(100% - ${({\n  theme\n}) => theme.switchHeight} + ${({\n  theme\n}) => theme.switchPadding});\n        }\n\n        &:focus + .switch__label,\n        &:active + .switch__label {\n            box-shadow: 0 0 0 3px alpha(${({\n  theme\n}) => theme.primary}, 0.2);\n        }\n    }\n    .switch__label {\n        width: 100%;\n        height: 100%;\n        color: transparent;\n        user-select: none;\n        background-color: ${({\n  theme\n}) => theme.textColor};\n        border-radius: inherit;\n        z-index: 1;\n        transition: background ${({\n  theme\n}) => theme.switchAnimationDuration};\n    }\n\n    .switch__marker {\n        position: relative;\n        background-color: ${({\n  theme\n}) => theme.primary};\n        width: calc(${({\n  theme\n}) => theme.switchHeight} - ${({\n  theme\n}) => theme.switchPadding} * 2);\n        height: calc(${({\n  theme\n}) => theme.switchHeight} - ${({\n  theme\n}) => theme.switchPadding} * 2);\n        border-radius: 50%;\n        z-index: 2;\n        pointer-events: none;\n        box-shadow: 0 1px 1px hsla(0, 0%, 0%, 0.25);\n        left: ${({\n  theme\n}) => theme.switchPadding};\n        transition: left ${({\n  theme\n}) => theme.switchAnimationDuration};\n        will-change: left;\n    }\n`;\n\nconst ToggleSwitch = () => {\n  const {\n    toggleTheme\n  } = useThemeContext();\n  return React.createElement(React.Fragment, null, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"switch__input\",\n    type: \"checkbox\",\n    id: \"switchCheckbox1\",\n    onClick: toggleTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    \"aria-hidden\": \"true\",\n    className: \"switch__label\",\n    htmlFor: \"switchCheckbox1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"On\"), React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: \"switch__marker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n};\n\nexport default ToggleSwitch; // #804AD8\n// #624BD9","map":{"version":3,"sources":["/Users/minh/Sites/localhost/react/figma-react-dashboard/src/components/Sidebar/ToggleSwitch.js"],"names":["React","styled","useThemeContext","Switch","div","theme","switchWidth","switchHeight","switchPadding","colorWhite","primary","textColor","switchAnimationDuration","ToggleSwitch","toggleTheme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAGA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;;;;;;;aAOb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,WAAY;cAChC,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa;;eAEjC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;;;;;;;;;;;;;;;;gCAgBlB,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,UAAW;;;;gCAIhC,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa,MAAK,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;;;;;0CAKhE,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,OAAQ;;;;;;;;4BAQ3C,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACM,SAAU;;;iCAG1B,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,uBAAwB;;;;;4BAKlD,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,OAAQ;sBACnC,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa,MAAK,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;uBACzE,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa,MAAK,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;;;;;gBAKjF,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;2BACxB,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,uBAAwB;;;CA3DxE;;AAgEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAkBZ,eAAe,EAAvC;AAGA,SACI,0CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,EAAE,EAAC,iBAApD;AAAsE,IAAA,OAAO,EAAEY,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,mBAAY,MAAnB;AAA0B,IAAA,SAAS,EAAC,eAApC;AAAoD,IAAA,OAAO,EAAC,iBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,mBAAY,MAAjB;AAAwB,IAAA,SAAS,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ;AASH,CAbD;;AAeA,eAAeD,YAAf,C,CAGA;AACA","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useThemeContext } from '../../context/themeContext'\n\n\nconst Switch = styled.div`\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    position: absolute;\n    bottom: 1rem;\n    right: 1rem;\n    width: ${({ theme }) => theme.switchWidth};\n    height: ${({ theme }) => theme.switchHeight};\n    border-radius: 50em;\n    padding: ${({ theme }) => theme.switchPadding} 0;\n\n    .switch__input, .switch__label {\n        position: absolute;\n        left: 0;\n        top: 0;\n    }\n    .switch__input {\n        margin: 0;\n        padding: 0;\n        opacity: 0;\n        height: 0;\n        width: 0;\n        pointer-events: none;\n\n        &:checked + .switch__label {\n            background-color: ${({ theme }) => theme.colorWhite};\n        }\n\n        &:checked + .switch__label + .switch__marker {\n            left: calc(100% - ${({ theme }) => theme.switchHeight} + ${({ theme }) => theme.switchPadding});\n        }\n\n        &:focus + .switch__label,\n        &:active + .switch__label {\n            box-shadow: 0 0 0 3px alpha(${({ theme }) => theme.primary}, 0.2);\n        }\n    }\n    .switch__label {\n        width: 100%;\n        height: 100%;\n        color: transparent;\n        user-select: none;\n        background-color: ${({ theme }) => theme.textColor};\n        border-radius: inherit;\n        z-index: 1;\n        transition: background ${({ theme }) => theme.switchAnimationDuration};\n    }\n\n    .switch__marker {\n        position: relative;\n        background-color: ${({ theme }) => theme.primary};\n        width: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\n        height: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\n        border-radius: 50%;\n        z-index: 2;\n        pointer-events: none;\n        box-shadow: 0 1px 1px hsla(0, 0%, 0%, 0.25);\n        left: ${({ theme }) => theme.switchPadding};\n        transition: left ${({ theme }) => theme.switchAnimationDuration};\n        will-change: left;\n    }\n`\n\nconst ToggleSwitch = () => {\n    const { toggleTheme } = useThemeContext()\n\n\n    return (\n        <>\n            <Switch>\n                <input className=\"switch__input\" type=\"checkbox\" id=\"switchCheckbox1\" onClick={toggleTheme} />\n                <label aria-hidden=\"true\" className=\"switch__label\" htmlFor=\"switchCheckbox1\">On</label>\n                <div aria-hidden=\"true\" className=\"switch__marker\"></div>\n            </Switch>\n        </>\n    )\n}\n\nexport default ToggleSwitch\n\n\n// #804AD8\n// #624BD9"]},"metadata":{},"sourceType":"module"}
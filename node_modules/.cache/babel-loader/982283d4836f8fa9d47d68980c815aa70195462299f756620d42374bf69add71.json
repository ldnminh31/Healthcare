{"ast":null,"code":"// import React from 'react'\n// import styled from 'styled-components'\n// import { useThemeContext } from '../../context/themeContext'\n\n// const Switch = styled.div`\n//     display: flex;\n//     flex-shrink: 0;\n//     align-items: center;\n//     position: absolute;\n//     bottom: 1rem;\n//     right: 1rem;\n//     width: ${({ theme }) => theme.switchWidth};\n//     height: ${({ theme }) => theme.switchHeight};\n//     border-radius: 50em;\n//     padding: ${({ theme }) => theme.switchPadding} 0;\n\n//     .switch__input, .switch__label {\n//         position: absolute;\n//         left: 0;\n//         top: 0;\n//     }\n//     .switch__input {\n//         margin: 0;\n//         padding: 0;\n//         opacity: 0;\n//         height: 0;\n//         width: 0;\n//         pointer-events: none;\n\n//         &:checked + .switch__label {\n//             background-color: ${({ theme }) => theme.colorWhite};\n//         }\n\n//         &:checked + .switch__label + .switch__marker {\n//             left: calc(100% - ${({ theme }) => theme.switchHeight} + ${({ theme }) => theme.switchPadding});\n//         }\n\n//         &:focus + .switch__label,\n//         &:active + .switch__label {\n//             box-shadow: 0 0 0 3px alpha(${({ theme }) => theme.primary}, 0.2);\n//         }\n//     }\n//     .switch__label {\n//         width: 100%;\n//         height: 100%;\n//         color: transparent;\n//         user-select: none;\n//         background-color: ${({ theme }) => theme.textColor};\n//         border-radius: inherit;\n//         z-index: 1;\n//         transition: background ${({ theme }) => theme.switchAnimationDuration};\n//     }\n\n//     .switch__marker {\n//         position: relative;\n//         background-color: ${({ theme }) => theme.primary};\n//         width: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\n//         height: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\n//         border-radius: 50%;\n//         z-index: 2;\n//         pointer-events: none;\n//         box-shadow: 0 1px 1px hsla(0, 0%, 0%, 0.25);\n//         left: ${({ theme }) => theme.switchPadding};\n//         transition: left ${({ theme }) => theme.switchAnimationDuration};\n//         will-change: left;\n//     }\n// `\n\n// const ToggleSwitch = () => {\n//     const { toggleTheme } = useThemeContext()\n\n//     return (\n//         <>\n//             <Switch>\n//                 <input className=\"switch__input\" type=\"checkbox\" id=\"switchCheckbox1\" onClick={toggleTheme} />\n//                 <label aria-hidden=\"true\" className=\"switch__label\" htmlFor=\"switchCheckbox1\">On</label>\n//                 <div aria-hidden=\"true\" className=\"switch__marker\"></div>\n//             </Switch>\n//         </>\n//     )\n// }\n\n// export default ToggleSwitch\n\n// // #804AD8\n// // #624BD9","map":{"version":3,"names":[],"sources":["/Users/minh/Sites/localhost/react/figma-react-dashboard/src/components/Sidebar/ToggleSwitch.js"],"sourcesContent":["// import React from 'react'\n// import styled from 'styled-components'\n// import { useThemeContext } from '../../context/themeContext'\n\n\n// const Switch = styled.div`\n//     display: flex;\n//     flex-shrink: 0;\n//     align-items: center;\n//     position: absolute;\n//     bottom: 1rem;\n//     right: 1rem;\n//     width: ${({ theme }) => theme.switchWidth};\n//     height: ${({ theme }) => theme.switchHeight};\n//     border-radius: 50em;\n//     padding: ${({ theme }) => theme.switchPadding} 0;\n\n//     .switch__input, .switch__label {\n//         position: absolute;\n//         left: 0;\n//         top: 0;\n//     }\n//     .switch__input {\n//         margin: 0;\n//         padding: 0;\n//         opacity: 0;\n//         height: 0;\n//         width: 0;\n//         pointer-events: none;\n\n//         &:checked + .switch__label {\n//             background-color: ${({ theme }) => theme.colorWhite};\n//         }\n\n//         &:checked + .switch__label + .switch__marker {\n//             left: calc(100% - ${({ theme }) => theme.switchHeight} + ${({ theme }) => theme.switchPadding});\n//         }\n\n//         &:focus + .switch__label,\n//         &:active + .switch__label {\n//             box-shadow: 0 0 0 3px alpha(${({ theme }) => theme.primary}, 0.2);\n//         }\n//     }\n//     .switch__label {\n//         width: 100%;\n//         height: 100%;\n//         color: transparent;\n//         user-select: none;\n//         background-color: ${({ theme }) => theme.textColor};\n//         border-radius: inherit;\n//         z-index: 1;\n//         transition: background ${({ theme }) => theme.switchAnimationDuration};\n//     }\n\n//     .switch__marker {\n//         position: relative;\n//         background-color: ${({ theme }) => theme.primary};\n//         width: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\n//         height: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\n//         border-radius: 50%;\n//         z-index: 2;\n//         pointer-events: none;\n//         box-shadow: 0 1px 1px hsla(0, 0%, 0%, 0.25);\n//         left: ${({ theme }) => theme.switchPadding};\n//         transition: left ${({ theme }) => theme.switchAnimationDuration};\n//         will-change: left;\n//     }\n// `\n\n// const ToggleSwitch = () => {\n//     const { toggleTheme } = useThemeContext()\n\n\n//     return (\n//         <>\n//             <Switch>\n//                 <input className=\"switch__input\" type=\"checkbox\" id=\"switchCheckbox1\" onClick={toggleTheme} />\n//                 <label aria-hidden=\"true\" className=\"switch__label\" htmlFor=\"switchCheckbox1\">On</label>\n//                 <div aria-hidden=\"true\" className=\"switch__marker\"></div>\n//             </Switch>\n//         </>\n//     )\n// }\n\n// export default ToggleSwitch\n\n\n// // #804AD8\n// // #624BD9"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}